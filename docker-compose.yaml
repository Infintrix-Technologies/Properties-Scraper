version: "3"

services:
  backend:
    build: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --access-logfile access.log"
    volumes:
      - .:/django_app
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - scraper

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5050:80"
    logging:
      driver: none
    networks:
      - scraper

  celery:
    restart: unless-stopped
    build:
      context: ./
    command: celery -A config worker -l info
    volumes:
      - .:/django_app
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - scraper

  celery_beat:
    restart: unless-stopped
    build:
      context: ./
    command: celery -A config beat --scheduler=tenants.scheduler.MyTenantAwareScheduler
    volumes:
      - .:/django_app
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - scraper

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    env_file:
      - .env


networks:
  scraper:
    external: true
