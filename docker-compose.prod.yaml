version: "3"

services:
  backend:
    build: ./backend
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py collectstatic --noinput &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py feeddb &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000 --access-logfile access.log"
    volumes:
      - ./backend:/django_app
    ports:
      - "8000:8000"
    env_file:
      - .env.prod

  celery:
    restart: unless-stopped
    build:
      context: ./backend
    command: celery -A core worker -l INFO
    volumes:
      - ./backend:/django_app
    env_file:
      - .env.prod
    depends_on:
      - redis

  celery_beat:
    restart: unless-stopped
    build:
      context: ./backend
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/django_app
    env_file:
      - .env.prod
    depends_on:
      - redis

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    env_file:
      - .env.prod

  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    env_file:
      - .env.prod
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: unless-stopped
    env_file:
      - .env.prod
    ports:
      - "5050:80"

  # frontend:
  #   image: node:18-alpine # Use the appropriate Node.js version
  #   container_name: react_frontend
  #   working_dir: /app
  #   volumes:
  #     - ./frontend:/app
  #   command: npm run build # Build your frontend application
  #   env_file:
  #     - .env.prod # Use a separate .env file for production
  #   expose:
  #     - "3000" # Expose the internal port
  #   depends_on:
  #     - backend

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx-config:/etc/nginx/conf.d # Mount Nginx configuration
  #     - ./frontend/build:/usr/share/nginx/html # Serve the built frontend
  #   depends_on:
  #     - frontend

volumes:
  postgres_data:
